/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package explorador;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author Pc
 */
public class InterfazBusqueda extends javax.swing.JFrame implements MouseListener, ActionListener{
    private int numResultados=0;
    private String busqueda;
    public static JPanel ultimoClickeado;

    /**
     * Creates new form InterfazBusqueda
     */
    public InterfazBusqueda() {
        initComponents();
    }
    
    public InterfazBusqueda(String buscar) {
        busqueda=buscar.toUpperCase();
        initComponents();
        palabra.setText("'"+buscar+"'");
        pintar();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabelResultados = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelContenido = new javax.swing.JPanel();
        palabra = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Explorador de Archivos (Busqueda)");
        setResizable(false);

        jLabel1.setText("Busqueda:");

        jLabelResultados.setText("0 resultados");

        jPanelContenido.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane1.setViewportView(jPanelContenido);

        palabra.setText(" ");
        palabra.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(palabra, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addComponent(jLabelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelResultados)
                    .addComponent(palabra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void pintar(){
        System.out.println("Empieza a pintar");
        Node raiz = Explorador.arbol.getDocumentElement();
        pintar_recursivo(raiz,"Mi PC:");
    }
    
    public void pintar_recursivo(Node raiz,String direccion){
        String auxName;
        NodeList listaNodos = raiz.getChildNodes();
        for(int i = 0; i < listaNodos.getLength(); i++){
            auxName = listaNodos.item(i).getAttributes().getNamedItem("nombre").getTextContent().toUpperCase();
            if(listaNodos.item(i).getNodeName().equals("directorio")){               
                if(auxName.contains(busqueda)){
                        Panel panel = new Panel(listaNodos.item(i).getNodeName(), listaNodos.item(i).getAttributes().getNamedItem("nombre").getTextContent());
                        JPanel elemento = panel.crear(direccion);
                        elemento.addMouseListener(this);
                        jPanelContenido.add(elemento);
                        numResultados++;
                        jLabelResultados.setText(numResultados+" resultados");
                    }
                pintar_recursivo(listaNodos.item(i),direccion+"\\"+listaNodos.item(i).getAttributes().getNamedItem("nombre").getTextContent());
            }
            else{
                if(listaNodos.item(i).getNodeName().equals("archivo")){
                    if(auxName.contains(busqueda)){
                        Panel panel = new Panel(listaNodos.item(i).getNodeName(), listaNodos.item(i).getAttributes().getNamedItem("nombre").getTextContent());
                        JPanel elemento = panel.crear(direccion);
                        elemento.addMouseListener(this);
                        jPanelContenido.add(elemento);
                        numResultados++;
                        jLabelResultados.setText(numResultados+" resultados");
                    }
                }
            }
        }
        
    }

    @Override
    public void mouseClicked(MouseEvent me) {
       if(ultimoClickeado != null)
            ultimoClickeado.setBackground(Color.WHITE);
        me.getComponent().setBackground(new Color(187, 211, 249));
        ultimoClickeado = (JPanel) me.getComponent();
        JLabel tipoComponente = (JLabel) ultimoClickeado.getComponent(1);
        
        //Doble click = abrir
        if (me.getClickCount()==2 && tipoComponente.getText().equals("directorio")){
            JLabel nombreDirectorio = (JLabel) ultimoClickeado.getComponent(2);
            Element ultimo = Directorio.obtenerNodoHijo(nombreDirectorio.getText());
            System.out.println();
            if (Directorio.obtenerNodoHijo(nombreDirectorio.getText()) != null) {
                if(ultimo.getAttribute("lectura").equals("Público") || ultimo.getAttribute("dueño").equals(Explorador.currentUser.getAttribute("nombre"))){
                    Explorador.currentDir = Directorio.obtenerNodoHijo(nombreDirectorio.getText());
                    this.dispose();   
                    Explorador.Direccion = (Explorador.Direccion+"\\"+Explorador.currentDir.getAttributes().getNamedItem("nombre").getTextContent());
                    String[] levels = Explorador.Direccion.split("\\\\");
                    Explorador.setCurrentLevel(levels.length);
                    new InterfazExplorador();
                }else{
                    JOptionPane.showMessageDialog(null, "No tienes permisos de lectura de este fichero", "Error de acceso", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Unexcpected error", "Error al abrir", JOptionPane.ERROR_MESSAGE);
            }          
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
         //To change body of generated methods, choose Tools | Templates.
    }
    
    class Panel{
        private final String tipo, nombre;
        
        public Panel(String tipo, String nombre){
            this.tipo = tipo;
            this.nombre = nombre;
        }
        
        public JPanel crear(String direccion){
            JPanel panel = new JPanel();
            panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
            JLabel nombre = new JLabel(this.nombre);
            nombre.setAlignmentX(Component.CENTER_ALIGNMENT);
            JLabel tipo = new JLabel(this.tipo);
            tipo.setAlignmentX(Component.CENTER_ALIGNMENT);
            JLabel ubicacion = new JLabel(direccion);
            ubicacion.setAlignmentX(Component.CENTER_ALIGNMENT);
            JLabel imagen = new JLabel("");
            imagen.setAlignmentX(Component.CENTER_ALIGNMENT);
            imagen.setSize(60, 60);
            if(this.tipo.equals("directorio")){
                ImageIcon img_directorio = new ImageIcon(getClass().getResource("/Imagenes/folder.png"));
                ImageIcon img = new ImageIcon(img_directorio.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_DEFAULT));
                imagen.setIcon(img);
            }
            if(this.tipo.equals("archivo")){
                ImageIcon img_archivo = new ImageIcon(getClass().getResource("/Imagenes/document.png"));
                ImageIcon img = new ImageIcon(img_archivo.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_DEFAULT));
                imagen.setIcon(img);
            }
            panel.add(imagen);
            panel.add(tipo);
            panel.add(nombre);
            panel.add(ubicacion);
            panel.setBackground(Color.WHITE);
            return panel;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelResultados;
    private javax.swing.JPanel jPanelContenido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel palabra;
    // End of variables declaration//GEN-END:variables
}
